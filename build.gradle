import org.labkey.gradle.util.BuildUtils
import org.labkey.gradle.util.ModuleFinder


buildscript {
    repositories {
        maven {
            url "${artifactory_contextUrl}/plugins-release"
        }
        maven {
            url "${artifactory_contextUrl}/plugins-snapshot-local"
        }
    }
    configurations.all {
        // Check for updates every build for SNAPSHOT dependencies
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

}

if (project.getParent() == null) {
    project.setProperty("standaloneBuild", true)
}
if (!standaloneBuild) {
    // Use properties from server project in standard build
    for (String prop : project.getProperties().keySet()) {
        if (project.parent.hasProperty(prop)) {
            project.setProperty(prop, project.parent.property(prop))
        }
    }
}

apply plugin: 'java'
apply plugin: 'org.labkey.build.module'
if (standaloneBuild) {
    apply plugin: 'org.labkey.build.tomcat'
    apply plugin: 'org.labkey.build.serverDeploy'
}


if (standaloneBuild) {
    allprojects {
        repositories {
            maven {
                url "${artifactory_contextUrl}/ext-tools-local"
            }
            maven {
                url "${artifactory_contextUrl}/libs-release"
            }
            maven {
                url "${artifactory_contextUrl}/libs-snapshot"
            }
            jcenter()
        }
    }

    //TODO: Pull in bundled JAR
    BuildUtils.addLabKeyDependency(project: project, config: 'tomcatJars', depProjectPath: BuildUtils.getBootstrapProjectPath(gradle)/*, depProjectConfig: 'runTimeElements'*/)

    dependencies
            {
                tomcatJars  "com.sun.mail:jakarta.mail:1.6.5"
                tomcatJars  "com.sun.activation:jakarta.activation:1.2.1" // JavaMail dependency (starting with Java 10), so it must be copied to <tomcat>/lib
            }
}

dependencies {

    modules("org.labkey.module:api:${labkeyVersion}@module") {
        transitive = true
    }
    modules("org.labkey.module:internal:${labkeyVersion}@module") {
        transitive = true
    }
    modules("org.labkey.module:audit:${labkeyVersion}@module") {
        transitive = true
    }
    modules("org.labkey.module:core:${labkeyVersion}@module") {
        transitive = true
    }

    // include core API
    implementation "org.labkey.api:core:${labkeyVersion}"
}
